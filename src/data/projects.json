{
  "projects": [
    {
      "id": 0,
      "cover": "noaai.webp",
      "title": "Noa.ai",
      "description": {
        "en": [
          "Noa.ai is an advanced chatbot powered by the ChatGPT API, designed to offer companionship and emotional support to people who feel lonely or have no one to talk to. Thanks to artificial intelligence, Noa.ai helps users reflect on and understand their problems in a different way, acting as a trusted friend who is always available to listen and converse.",
          "To ensure a personalized experience, Noa.ai is trained with user data obtained through surveys, which allows it to understand their preferences and needs, and provide more accurate and empathetic responses. This approach makes the chatbot feel like a lifelong friend, providing more meaningful and empathetic conversations.",
          "Technically, Noa.ai uses Firebase for hosting, database, and authentication services, supporting login methods via email, Facebook, and Google. Additionally, various ChatGPT API services are integrated, including the language model, Speech to Text, and Text to Speech, to offer a more natural and fluid interaction."
        ],
        "es": [
          "Noa.ai es un chatbot avanzado impulsado por la API de ChatGPT, diseñado para ofrecer compañía y apoyo emocional a personas que se sienten solas o no tienen con quién hablar. Gracias a la inteligencia artificial, Noa.ai ayuda a los usuarios a reflexionar y comprender sus problemas de una manera diferente, actuando como un amigo de confianza que siempre está disponible para escuchar y conversar.",
          "Para garantizar una experiencia personalizada, Noa.ai se entrena con datos de usuario obtenidos a través de encuestas, lo que le permite comprender sus preferencias y necesidades, y proporcionar respuestas más precisas y empáticas. Este enfoque hace que el chatbot se sienta como un amigo de toda la vida, proporcionando conversaciones más significativas y empáticas.",
          "Técnicamente, Noa.ai utiliza Firebase para alojamiento, base de datos y servicios de autenticación, admitiendo métodos de inicio de sesión a través de correo electrónico, Facebook y Google. Además, se integran varios servicios de la API de ChatGPT, incluido el modelo de lenguaje, Speech to Text y Text to Speech, para ofrecer una interacción más natural y fluida."
        ]
      },
      "shortDescription": {
        "en": "Advanced chatbot with ChatGPT and Firebase, integrates Speech to Text and Text to Speech.",
        "es": "Chatbot avanzado con ChatGPT y Firebase, integra Speech to Text y Text to Speech."
      },
      "technologies": ["vue.png", "firebase.png", "js.png"],
      "links": {
        "repository": "https://github.com/AxlGuillen/noa.ai",
        "demo": "https://noa1-f2c78.web.app/"
      }
    },
    {
      "id": 1,
      "cover": "api.webp",
      "title": "API",
      "description": {
        "en": [
          "This backend project involves creating an API for managing five tables, simulating a completely real and applicable environment. The related tables are clients, products, sales, purchases, and sales details. This is achieved using a series of new and widely used technologies.",
          "The code is written in TypeScript, the database is in Turso, the framework used is Hono, and it is hosted on Cloudflare. Additionally, the documentation is found on Hoppscotch.",
          "The implementation of this backend project using TypeScript, Turso, Hono, and Cloudflare demonstrates a modern and efficient approach to data management. Through this solution, it highlights how current technologies can offer superior performance and greater scalability compared to traditional approaches.",
          "Although this project is a simulation, it is built with the same care and precision expected in a real environment, reflecting my ability to create robust and up-to-date technological solutions. This showcases not only my technical knowledge but also my commitment to innovation and quality in software development."
        ],
        "es": [
          "Este proyecto de backend consiste en crear una API para gestionar cinco tablas, simulando un entorno completamente real y aplicable. Las tablas relacionadas son clientes, productos, ventas, compras y detalles de ventas. Esto se logra utilizando una serie de tecnologías nuevas y ampliamente utilizadas.",
          "El código está escrito en TypeScript, la base de datos está en Turso, el framework utilizado es Hono y está alojado en Cloudflare. Además, la documentación se encuentra en Hoppscotch.",
          "La implementación de este proyecto backend utilizando TypeScript, Turso, Hono y Cloudflare demuestra un enfoque moderno y eficiente para la gestión de datos. A través de esta solución, se destaca cómo las tecnologías actuales pueden ofrecer un rendimiento superior y una mayor escalabilidad en comparación con los enfoques tradicionales.",
          "Aunque este proyecto es una simulación, está construido con el mismo cuidado y precisión que se esperaría en un entorno real, lo que refleja mi capacidad para crear soluciones tecnológicas robustas y actualizadas. Esto no solo demuestra mi conocimiento técnico, sino también mi compromiso con la innovación y la calidad en el desarrollo de software."
        ]
      },
      "shortDescription": {
        "en": "Backend API with TypeScript, Turso, Hono, and Cloudflare, documented in Hoppscotch.",
        "es": "API backend con TypeScript, Turso, Hono y Cloudflare, documentado en Hoppscotch."
      },
      "technologies": ["ts.png", "hono.png", "cloudFlare.png"],
      "links": {
        "repository": "https://github.com/AxlGuillen/practica1",
        "demo": "https://practica1.axl13-dev.workers.dev/"
      }
    },
    {
      "id": 2,
      "cover": "nextik.webp",
      "title": "PWA",
      "description": {
        "en": [
          "In this project, I participated in converting an existing website to a Progressive Web App (PWA). The original page allowed generating a link to send messages via WhatsApp to a number not registered in the user's contact list, thus avoiding the need to add the number to contacts. By converting the page into a PWA, users can install the web on their devices, whether an Android or iOS phone, or a computer, emulating the behavior of a native application. The advantages of this conversion include offline functionality, automatic updates when there are changes on the page, and greater accessibility for the user."
        ],
        "es": [
          "En este proyecto, participé en la conversión de un sitio web existente en una Progressive Web App (PWA). La página original permitía generar un enlace para enviar mensajes vía WhatsApp a un número no registrado en la lista de contactos del usuario, evitando así la necesidad de agregar el número a los contactos. Al convertir la página en una PWA, los usuarios pueden instalar la web en sus dispositivos, ya sea un teléfono Android o iOS, o una computadora, emulando el comportamiento de una aplicación nativa. Las ventajas de esta conversión incluyen funcionalidad sin conexión, actualizaciones automáticas cuando hay cambios en la página y mayor accesibilidad para el usuario."
        ]
      },
      "shortDescription": {
        "en": "Conversion of a web to PWA to send WhatsApp messages without adding contacts.",
        "es": "Conversión de una web a PWA para enviar mensajes de WhatsApp sin agregar contactos."
      },
      "technologies": ["vue.png", "js.png", "vite.png"],
      "links": {
        "repository": "https://github.com/ZeroTrace/whatsapp-message",
        "demo": "https://mensajes.nextik.mx/"
      }
    },
    {
      "id": 3,
      "cover": "blackjack.webp",
      "title": "Blackjack",
      "description": {
        "en": [
          "This project, developed exclusively with JavaScript, is a multiplayer blackjack game where the computer always aims to win, following all the traditional rules of the game. Technologically, the project was created to test Vite and GitHub Pages. This setup allows building the project, and when committing to GitHub, it is automatically updated in the deployment, facilitating an efficient and continuous workflow."
        ],
        "es": [
          "Este proyecto, desarrollado exclusivamente con JavaScript, es un juego de blackjack multijugador donde la computadora siempre busca ganar, siguiendo todas las reglas tradicionales del juego. Tecnológicamente, el proyecto fue creado para probar Vite y GitHub Pages. Esta configuración permite construir el proyecto, y al hacer un commit en GitHub, se actualiza automáticamente en el despliegue, facilitando un flujo de trabajo eficiente y continuo."
        ]
      },
      "shortDescription": {
        "en": "Blackjack game with JavaScript, tested with Vite and deployed on GitHub Pages.",
        "es": "Juego de blackjack con JavaScript, probado con Vite y desplegado en GitHub Pages."
      },
      "technologies": ["html-5.png", "js.png", "vite.png"],
      "links": {
        "repository": "https://github.com/AxlGuillen/blackjack-vite",
        "demo": "https://axlguillen.github.io/blackjack-vite/"
      }
    }
  ]
}
